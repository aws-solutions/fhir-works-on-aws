#
#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0
#

name: pnpm-audit
on: 
  pull_request:
    types: [opened, synchronize, edited, reopened]

  schedule:
    - cron: '0 15 * * 1-5'
jobs:
  pnpm-audit:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.BOT_TOKEN }}

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Cache Rush
        uses: actions/cache@v3
        with:
          path: |
            common/temp/install-run
            ~/.rush
          key: ${{ runner.os }}-rush-${{ hashFiles('rush.json') }}
          restore-keys: |
            ${{ runner.os }}-rush-
            ${{ runner.os }}-
      - name: Cache pnpm
        uses: actions/cache@v3
        with:
          path: |
            common/temp/pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('common/config/rush/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
            ${{ runner.os }}-
      - name: install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 6.32

      - name: Install dependecies
        run: node common/scripts/install-run-rush.js install

      - name: pnpm-audit
        run: |
          cd common/temp
          pnpm audit --prod

      - name: Report Status
        if: |
          success() && github.head_ref
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
            payload: |
              {
                "slack_message": "GitHub pnpm audit workflow result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                "workflow_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                "status": "${{ job.status }}"
                'ref_output': "${{ github.head_ref }}"
              }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}    

