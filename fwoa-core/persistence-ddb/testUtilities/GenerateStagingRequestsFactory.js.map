{"version":3,"file":"GenerateStagingRequestsFactory.js","sourceRoot":"","sources":["GenerateStagingRequestsFactory.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *  SPDX-License-Identifier: Apache-2.0\n */\n\n/* eslint-disable class-methods-use-this */\nimport { BatchReadWriteRequest, BatchReadWriteResponse } from 'fhir-works-on-aws-interface';\nimport { DynamoDBConverter } from '../src/dataServices/dynamoDb';\nimport { DOCUMENT_STATUS_FIELD } from '../src/dataServices/dynamoDbUtil';\nimport DOCUMENT_STATUS from '../src/dataServices/documentStatus';\nimport { timeFromEpochInMsRegExp, utcTimeRegExp, uuidRegExp } from './regExpressions';\nimport DynamoDbParamBuilder from '../src/dataServices/dynamoDbParamBuilder';\nimport { ItemRequest } from '../src/dataServices/dynamoDbBundleServiceHelper';\n\ninterface RequestResult {\n    request: any;\n    expectedRequest: any;\n    expectedLock: any;\n    expectedStagingResponse: any;\n    idToVersionId: Record<string, number>;\n}\n\nexport default class GenerateStagingRequestsFactory {\n    static getCreate(): RequestResult {\n        const createResource = {\n            resourceType: 'Patient',\n            name: [\n                {\n                    family: 'Jameson',\n                    given: ['Matt'],\n                },\n            ],\n            gender: 'male',\n        };\n        const request = {\n            operation: 'create',\n            resourceType: 'Patient',\n            id: '',\n            resource: createResource,\n            fullUrl: '',\n        };\n\n        const expectedCreateItem: any = { ...createResource };\n        expectedCreateItem[DOCUMENT_STATUS_FIELD] = DOCUMENT_STATUS.PENDING;\n\n        const expectedRequest = {\n            Put: {\n                TableName: '',\n                Item: DynamoDBConverter.marshall(expectedCreateItem),\n            },\n        };\n\n        const expectedLock = {\n            id: expect.stringMatching(uuidRegExp),\n            vid: 1,\n            resourceType: 'Patient',\n            operation: 'create',\n        };\n\n        const expectedStagingResponse: BatchReadWriteResponse = {\n            id: expect.stringMatching(uuidRegExp),\n            vid: '1',\n            operation: 'create',\n            resourceType: 'Patient',\n            resource: {\n                ...createResource,\n                id: expect.stringMatching(uuidRegExp),\n                meta: { versionId: '1', lastUpdated: expect.stringMatching(utcTimeRegExp) },\n            },\n            lastModified: expect.stringMatching(utcTimeRegExp),\n        };\n        return {\n            request,\n            expectedRequest,\n            expectedLock,\n            expectedStagingResponse,\n            idToVersionId: {},\n        };\n    }\n\n    static getRead(): RequestResult {\n        const id = '47135b80-b721-430b-9d4b-1557edc64947';\n        const request = {\n            operation: 'read',\n            resource: `Patient/${id}`,\n            fullUrl: '',\n            resourceType: 'Patient',\n            id,\n        };\n\n        const vid = 1;\n\n        const expectedRequest = {\n            Get: {\n                TableName: '',\n                Key: {\n                    id: {\n                        S: id,\n                    },\n                    vid: {\n                        N: vid.toString(),\n                    },\n                },\n            },\n        };\n\n        const expectedLock: [] = [];\n        const expectedStagingResponse: BatchReadWriteResponse = {\n            id,\n            vid: vid.toString(),\n            operation: 'read',\n            lastModified: '',\n            resource: {},\n            resourceType: 'Patient',\n        };\n\n        const idToVersionId: Record<string, number> = {};\n        idToVersionId[id] = vid;\n\n        return {\n            request,\n            expectedRequest,\n            expectedLock,\n            expectedStagingResponse,\n            idToVersionId,\n        };\n    }\n\n    static getUpdate(): RequestResult {\n        const id = '8cafa46d-08b4-4ee4-b51b-803e20ae8126';\n        const vid = 1;\n        const nextVid = 2;\n        const existingMeta = { security: [{ code: 'test' }], versionId: vid.toString() };\n        const resource = {\n            resourceType: 'Patient',\n            id,\n            name: [\n                {\n                    family: 'Jameson',\n                    given: ['Matt'],\n                },\n            ],\n            gender: 'male',\n            meta: existingMeta,\n        };\n        const request: BatchReadWriteRequest = {\n            operation: 'update',\n            resourceType: 'Patient',\n            id,\n            resource,\n            fullUrl: `urn:uuid:${id}`,\n        };\n\n        const expectedUpdateItem: any = { ...resource, meta: { ...existingMeta, versionId: nextVid.toString() } };\n        expectedUpdateItem[DOCUMENT_STATUS_FIELD] = DOCUMENT_STATUS.PENDING;\n        expectedUpdateItem.id = id;\n        expectedUpdateItem.vid = nextVid;\n\n        const expectedRequest = {\n            Put: {\n                TableName: '',\n                Item: DynamoDBConverter.marshall(expectedUpdateItem),\n            },\n        };\n\n        const expectedLock: ItemRequest = {\n            id,\n            vid: nextVid,\n            resourceType: 'Patient',\n            operation: 'update',\n            isOriginalUpdateItem: false,\n        };\n\n        const expectedStagingResponse: BatchReadWriteResponse = {\n            id,\n            vid: nextVid.toString(),\n            operation: 'update',\n            resourceType: 'Patient',\n            resource: {\n                ...resource,\n                meta: {\n                    ...existingMeta,\n                    versionId: nextVid.toString(),\n                    lastUpdated: expect.stringMatching(utcTimeRegExp),\n                },\n            },\n            lastModified: expect.stringMatching(utcTimeRegExp),\n        };\n\n        const idToVersionId: Record<string, number> = {};\n        idToVersionId[id] = vid;\n\n        return {\n            request,\n            expectedRequest,\n            expectedLock,\n            expectedStagingResponse,\n            idToVersionId,\n        };\n    }\n\n    static getDelete(): RequestResult {\n        const id = 'bce8411e-c15e-448c-95dd-69155a837405';\n        const resourceType = 'Patient';\n        const request: BatchReadWriteRequest = {\n            operation: 'delete',\n            resource: `Patient/${id}`,\n            fullUrl: '',\n            resourceType,\n            id,\n        };\n\n        const vid = 1;\n        const expectedRequest = DynamoDbParamBuilder.buildUpdateDocumentStatusParam(\n            DOCUMENT_STATUS.LOCKED,\n            DOCUMENT_STATUS.PENDING_DELETE,\n            id,\n            vid,\n            resourceType,\n        );\n\n        expectedRequest.Update.ExpressionAttributeValues[':currentTs'].N =\n            expect.stringMatching(timeFromEpochInMsRegExp);\n        expectedRequest.Update.ExpressionAttributeValues[':futureEndTs'].N =\n            expect.stringMatching(timeFromEpochInMsRegExp);\n\n        const expectedLock: [] = [];\n\n        const expectedStagingResponse: BatchReadWriteResponse = {\n            id,\n            vid: vid.toString(),\n            operation: 'delete',\n            lastModified: expect.stringMatching(utcTimeRegExp),\n            resource: {},\n            resourceType: 'Patient',\n        };\n\n        const idToVersionId: Record<string, number> = {};\n        idToVersionId[id] = vid;\n\n        return {\n            request,\n            expectedRequest,\n            expectedLock,\n            expectedStagingResponse,\n            idToVersionId,\n        };\n    }\n}\n"]}